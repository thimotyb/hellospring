@Test
public void shouldProcessRegistration() throws Exception {
userRepository mockRepository =
mock(userRepository.class);
user unsaved =
new user("jbauer", "24hours", "Jack", "Bauer");
user saved =
new user(24L, "jbauer", "24hours", "Jack", "Bauer");
when(mockRepository.save(unsaved)).thenReturn(saved);
userController controller =
new userController(mockRepository);
MockMvc mockMvc = standaloneSetup(controller).build();
mockMvc.perform(post("/user/register")
.param("firstName", "Jack")
.param("lastName", "Bauer")
.param("username", "jbauer")
.param("password", "24hours"))
.andExpect(redirectedUrl("/user/jbauer"));
verify(mockRepository, atLeastOnce()).save(unsaved);
}


@Controller
@RequestMapping("/user")
public class userController {
private userRepository userRepository;
@Autowired
public userController(
userRepository userRepository) {
this.userRepository = userRepository;
}
@RequestMapping(value="/register", method=GET)
public String showRegistrationForm() {
return "registerForm";
}
@RequestMapping(value="/register", method=POST)
public String processRegistration(user user) {
userRepository.save(user);
return "redirect:/user/" +
user.getUsername();
}
}

@RequestMapping(value="/{username}", method=GET)
public String showuserProfile(
@PathVariable String username, Model model) {
user user = userRepository.findByUsername(username);
model.addAttribute(user);
return "profile";
}

View di output
<h1>Your Profile</h1>
<c:out value="${user.username}" /><br/>
<c:out value="${user.firstName}" />
<c:out value="${user.lastName}" />

View di input
<sf:form method="POST" commandName="user">
First Name: <sf:input path="firstName" /><br/>
Last Name: <sf:input path="lastName" /><br/>
Email: <sf:input path="email" /><br/>
Username: <sf:input path="username" /><br/>
Password: <sf:password path="password" /><br/>
<input type="submit" value="Register" />
</sf:form>

@RequestMapping(value="/register", method=GET)
public String showRegistrationForm(Model model) {
model.addAttribute(new user());
return "registerForm";
}